Функции для работы со строками
==============================


mb_lcfirst
~~~~~~~~~~
.. rubric:: Преобразует первый символ в нижний регистр.

.. code-block:: php

    <?php
    mb_lcfirst($data, $charset = 'UTF-8')
    {
        /** .. */
    }

Параметры функции
*****************

.. glossary::

    $data
        | **Тип данных**: array|string
        | **Описание**: Обрабатываемая строка или массив

    $charset
        | **Тип данных**: string|string
        | **Описание**: Кодировка строки
        | **Значение по умолчанию**: UTF-8

.. note::

        Эта функция возвращает тип данных **string**, если первый параметр функции $data является строкой.
        **array**, если параметр $data является массивом.

.. warning::

    Функция не доступна если не подключен расширение mbstring.

.. seealso::

   `for_all <array_functions.html#for-all>`_
      Эта функция корректно обрабатывает как строку, так и значения многомерных массивов

---------------------------------------

mb_ucfirst
~~~~~~~~~~
.. rubric:: Преобразует первый символ в верхний регистр.

.. code-block:: php

    <?php
    mb_ucfirst($data, $charset = 'UTF-8')
    {
        /** .. */
    }

Параметры функции
*****************

.. glossary::

    $data
        | **Тип данных**: array|string
        | **Описание**: Обрабатываемая строка или массив

    $charset
        | **Тип данных**: string
        | **Описание**: Кодировка строки
        | **Значение по умолчанию**: UTF-8

.. note::

        Эта функция возвращает тип данных **string**, если первый параметр функции $data является строкой.
        **array**, если параметр $data является массивом.

.. warning::

    Функция не доступна если не подключен расширение mbstring.

.. seealso::

   `for_all <array_functions.html#for-all>`_
      Эта функция корректно обрабатывает как строку, так и значения многомерных массивов

---------------------------------------

one_space
~~~~~~~~~
.. rubric:: Заменить множественную последовательность пробелов и табуляций на 1 пробел.

.. code-block:: php

    <?php
    one_space($data)
    {
        /** .. */
    }

Параметры функции
*****************

.. glossary::

    $data
        | **Тип данных**: array|string
        | **Описание**: Обрабатываемая строка или массив

.. note::

        Эта функция возвращает тип данных **string**, если первый параметр функции $data является строкой.
        **array**, если параметр $data является массивом.


.. seealso::

   `for_all <array_functions.html#for-all>`_
      Эта функция корректно обрабатывает как строку, так и значения многомерных массивов

---------------------------------------

one_new_line
~~~~~~~~~~~~
.. rubric:: Заменить множественную последовательность перевода строки на 1 перевод.

.. code-block:: php

    <?php
    one_new_line($data)
    {
        /** .. */
    }

Параметры функции
*****************

.. glossary::

    $data
        | **Тип данных**: array|string
        | **Описание**: Обрабатываемая строка или массив

.. note::

        Эта функция возвращает тип данных **string**, если первый параметр функции $data является строкой.
        **array**, если параметр $data является массивом.

.. seealso::

   `for_all <array_functions.html#for-all>`_
      Эта функция корректно обрабатывает как строку, так и значения многомерных массивов

---------------------------------------

full_one_space
~~~~~~~~~~~~~~
.. rubric:: Заменить множественную последовательность пробелов, табуляций и переводов строк на 1 пробел.

.. code-block:: php

    <?php
    full_one_space($data)
    {
        /** .. */
    }

Параметры функции
*****************

.. glossary::

    $data
        | **Тип данных**: array|string
        | **Описание**: Обрабатываемая строка или массив

.. note::

        Эта функция возвращает тип данных **string**, если первый параметр функции $data является строкой.
        **array**, если параметр $data является массивом.

.. seealso::

   `for_all <array_functions.html#for-all>`_
      Эта функция корректно обрабатывает как строку, так и значения многомерных массивов

---------------------------------------

e_decode
~~~~~~~~
.. rubric:: Декодирование HTML сущностей в строке.

.. code-block:: php

    <?php
    e_decode($data, $charset = 'UTF-8')
    {
        /** .. */
    }

Параметры функции
*****************

.. glossary::

    $data
        | **Тип данных**: array|string
        | **Описание**: Обрабатываемая строка или массив

    $charset
        | **Тип данных**: string
        | **Описание**: Кодировка строки
        | **Значение по умолчанию**: UTF-8

.. note::

        Эта функция возвращает тип данных **string**, если первый параметр функции $data является строкой.
        **array**, если параметр $data является массивом.

.. seealso::

   `for_all <array_functions.html#for-all>`_
      Эта функция корректно обрабатывает как строку, так и значения многомерных массивов

---------------------------------------

e
~
.. rubric:: Преобразование всех специальных символов строки в HTML сущности.

.. code-block:: php

    <?php
    e($data, $charset = 'UTF-8')
    {
        /** .. */
    }

Параметры функции
*****************

.. glossary::

    $data
        | **Тип данных**: array|string
        | **Описание**: Обрабатываемая строка или массив

    $charset
        | **Тип данных**: string
        | **Описание**: Кодировка строки
        | **Значение по умолчанию**: UTF-8

.. note::

        Эта функция возвращает тип данных **string**, если первый параметр функции $data является строкой.
        **array**, если параметр $data является массивом.

.. seealso::

   `for_all <array_functions.html#for-all>`_
      Эта функция корректно обрабатывает как строку, так и значения многомерных массивов

---------------------------------------

camel_case
~~~~~~~~~~
.. rubric:: Преобразовывание строки в CamelCase формат.

.. code-block:: php

    <?php
    camel_case($str, $first = false)
    {
        /** .. */
    }

Параметры функции
*****************

.. glossary::

    $str
        | **Тип данных**: array|string
        | **Описание**: Обрабатываемая строка или массив

    $first
        | **Тип данных**: bool
        | **Описание**: Необходимо ли первый символ перевести в верхний регистр
        | **Значение по умолчанию**: false

.. note::

        Эта функция возвращает тип данных **string**, если первый параметр функции $data является строкой.
        **array**, если параметр $data является массивом.

.. seealso::

   `for_all <array_functions.html#for-all>`_
      Эта функция корректно обрабатывает как строку, так и значения многомерных массивов

---------------------------------------

underscore
~~~~~~~~~~
.. rubric:: Преобразовывание строки в underscore формат.

.. code-block:: php

    <?php
    underscore($str)
    {
        /** .. */
    }

Параметры функции
*****************

.. glossary::

    $str
        | **Тип данных**: array|string
        | **Описание**: Обрабатываемая строка или массив

.. note::

        Эта функция возвращает тип данных **string**, если первый параметр функции $data является строкой.
        **array**, если параметр $data является массивом.

.. seealso::

   `for_all <array_functions.html#for-all>`_
      Эта функция корректно обрабатывает как строку, так и значения многомерных массивов

---------------------------------------

normalize_name
~~~~~~~~~~~~~~
.. rubric:: Нормализация имен.

| Эта функция преобразовывает в верхний регистр первый символ каждого слова.
| В качестве разделителя слов используются символы " ", "-", "'".

.. code-block:: php

    <?php
    normalize_name($str)
    {
        /** .. */
    }

Параметры функции
*****************

.. glossary::

    $str
        | **Тип данных**: array|string
        | **Описание**: Обрабатываемая строка или массив

.. note::

        Эта функция возвращает тип данных **string**, если первый параметр функции $data является строкой.
        **array**, если параметр $data является массивом.


.. seealso::

   `for_all <array_functions.html#for-all>`_
      Эта функция корректно обрабатывает как строку, так и значения многомерных массивов

---------------------------------------

mb_str_replace
~~~~~~~~~~~~~~
.. rubric:: Replace all occurrences of the search string with the replacement string.

.. code-block:: php

    <?php
    mb_str_replace($search, $replace, $subject, &$count = 0)
    {
        /** .. */
    }

Параметры функции
*****************

.. glossary::

    $search
        | **Тип данных**: string
        | **Описание**: Оискомая строка

    $replace
        | **Тип данных**: string
        | **Описание**: Строка на которую необходимо заменить искомое

    $subject
        | **Тип данных**: string
        | **Описание**: Строка в которой производится замена

    &$count
        | **Тип данных**: string
        | **Описание**: Число произведенных замен в строке
        | **Значение по умолчанию**: 0

.. note::

        Эта функция возвращает тип данных **string**


---------------------------------------

mb_trim_word
~~~~~~~~~~~~
.. rubric:: Обрезание текста по длине с поиском последнего полностью вмещающегося слова и удалением лишних крайних знаков пунктуации.

.. code-block:: php

    <?php
    mb_trim_word($html, $len, $encoding = 'UTF-8')
    {
        /** .. */
    }

Параметры функции
*****************

.. glossary::

    $html
        | **Тип данных**: string
        | **Описание**: HTML текст

    $len
        | **Тип данных**: string
        | **Описание**: Максимальная длина строки

    $encoding
        | **Тип данных**: string
        | **Описание**: Кодировка
        | **Значение по умолчанию**: UTF-8

.. note::

        Эта функция возвращает тип данных **string**

---------------------------------------

strip_tags_smart
~~~~~~~~~~~~~~~~
.. rubric:: Более продвинутый аналог strip_tags() для корректного вырезания тагов из html кода.

.. code-block:: php

    <?php
    strip_tags_smart($s, $allowable_tags = null, $is_format_spaces = true,
		$pair_tags = array('script', 'style', 'map', 'iframe', 'frameset', 'object', 'applet', 'comment', 'button', 'textarea', 'select'),
		$para_tags = array('p', 'td', 'th', 'li', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'div', 'form', 'title', 'pre')
	)
    {
        /** .. */
    }

Параметры функции
*****************

.. glossary::

    $s
        | **Тип данных**: string
        | **Описание**: Обрабатываемая строка с HTML текстом

   $allowable_tags
        | **Тип данных**: array|null
        | **Описание**: Массив тагов, которые не будут вырезаны
        | **Значение по умолчанию**: null
        | **Пример**: 'b' - тег b с сохранением атрибутов, '<b>' - тэг b без сохранения атрибутов

   $is_format_spaces
        | **Тип данных**: bool
        | **Описание**: Форматировать пробелы и переносы строк?
                Вид текста на выходе (plain) максимально приближеется виду текста в браузере на входе.
                Другими словами, грамотно преобразует text/html в text/plain.
	            Текст форматируется только в том случае, если были вырезаны какие-либо таги.
        | **Значение по умолчанию**: true

   $pair_tags
        | **Тип данных**: array
        | **Описание**: Массив имён парных тагов, которые будут удалены вместе с содержимым
        | **Значение по умолчанию**: array('script', 'style', 'map', 'iframe', 'frameset', 'object', 'applet', 'comment', 'button', 'textarea', 'select')

   $para_tags
        | **Тип данных**: array
        | **Описание**: Массив имён парных тагов, которые будут восприниматься как параграфы (если $is_format_spaces = true)
        | **Значение по умолчанию**: array('p', 'td', 'th', 'li', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'div', 'form', 'title', 'pre')

.. note::

        Эта функция возвращает тип данных **string**


.. hlist::

:Возможности:
        - корректно обрабатываются вхождения типа "a < b > c"
        - корректно обрабатывается "грязный" html, когда в значениях атрибутов тагов могут встречаться символы < >
        - корректно обрабатывается разбитый html
        - вырезаются комментарии, скрипты, стили, PHP, Perl, ASP код, MS Word таги, CDATA
        - автоматически форматируется текст, если он содержит html код
        - защита от подделок типа: "<<fake>script>alert('hi')</</fake>script>"


---------------------------------------

last_implode
~~~~~~~~~~~~
.. rubric:: Склеивание всех элементов массива по разделителю. Для последнего элемента используется специфичный разделитель.

.. code-block:: php

    <?php
    last_implode($sep, $data, $last = '')
    {
        /** .. */
    }

Параметры функции
*****************

.. glossary::

    $sep
        | **Тип данных**: string
        | **Описание**: разделитель элементов массива

    $data
        | **Тип данных**: array
        | **Описание**: Массив

    $last
        | **Тип данных**: string
        | **Описание**: Разделитель для последнего элемента массива. Если разделитель не установлен или пуст, то используется $sep
        | **Значение по умолчанию**: null

.. note::

        Эта функция возвращает тип данных **string**

---------------------------------------

is_nop
~~~~~~
.. rubric:: Является ли строка пустой.

.. code-block:: php

    <?php
    is_nop($val)
    {
        /** .. */
    }

Параметры функции
*****************

.. glossary::

    $sep
        | **Тип данных**: string
        | **Описание**: проверяемая строка

.. note::

        Эта функция возвращает тип данных **bool**

---------------------------------------

first_word
~~~~~~~~~~
.. rubric:: Получение первого слова из строки.

.. code-block:: php

    <?php
    first_word($string)
    {
        /** .. */
    }

Параметры функции
*****************

.. glossary::

    $string
        | **Тип данных**: string
        | **Описание**: Обрабатываемая строка

.. note::

        Эта функция возвращает тип данных **string**
